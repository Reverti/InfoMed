//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace DataLayer.DataBaseModels
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class InfoMedTrashDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new InfoMedTrashDBEntities object using the connection string found in the 'InfoMedTrashDBEntities' section of the application configuration file.
        /// </summary>
        public InfoMedTrashDBEntities() : base("name=InfoMedTrashDBEntities", "InfoMedTrashDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InfoMedTrashDBEntities object.
        /// </summary>
        public InfoMedTrashDBEntities(string connectionString) : base(connectionString, "InfoMedTrashDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InfoMedTrashDBEntities object.
        /// </summary>
        public InfoMedTrashDBEntities(EntityConnection connection) : base(connection, "InfoMedTrashDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Messages> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Messages>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Messages> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notification> Notification
        {
            get
            {
                if ((_Notification == null))
                {
                    _Notification = base.CreateObjectSet<Notification>("Notification");
                }
                return _Notification;
            }
        }
        private ObjectSet<Notification> _Notification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonMeasuring> PersonMeasuring
        {
            get
            {
                if ((_PersonMeasuring == null))
                {
                    _PersonMeasuring = base.CreateObjectSet<PersonMeasuring>("PersonMeasuring");
                }
                return _PersonMeasuring;
            }
        }
        private ObjectSet<PersonMeasuring> _PersonMeasuring;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonMedicament> PersonMedicament
        {
            get
            {
                if ((_PersonMedicament == null))
                {
                    _PersonMedicament = base.CreateObjectSet<PersonMedicament>("PersonMedicament");
                }
                return _PersonMedicament;
            }
        }
        private ObjectSet<PersonMedicament> _PersonMedicament;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonRiskFactor> PersonRiskFactor
        {
            get
            {
                if ((_PersonRiskFactor == null))
                {
                    _PersonRiskFactor = base.CreateObjectSet<PersonRiskFactor>("PersonRiskFactor");
                }
                return _PersonRiskFactor;
            }
        }
        private ObjectSet<PersonRiskFactor> _PersonRiskFactor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonSymptom> PersonSymptom
        {
            get
            {
                if ((_PersonSymptom == null))
                {
                    _PersonSymptom = base.CreateObjectSet<PersonSymptom>("PersonSymptom");
                }
                return _PersonSymptom;
            }
        }
        private ObjectSet<PersonSymptom> _PersonSymptom;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Messages messages)
        {
            base.AddObject("Messages", messages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotification(Notification notification)
        {
            base.AddObject("Notification", notification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonMeasuring EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonMeasuring(PersonMeasuring personMeasuring)
        {
            base.AddObject("PersonMeasuring", personMeasuring);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonMedicament EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonMedicament(PersonMedicament personMedicament)
        {
            base.AddObject("PersonMedicament", personMedicament);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonRiskFactor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonRiskFactor(PersonRiskFactor personRiskFactor)
        {
            base.AddObject("PersonRiskFactor", personRiskFactor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonSymptom EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonSymptom(PersonSymptom personSymptom)
        {
            base.AddObject("PersonSymptom", personSymptom);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InfoMedTrashDBModel", Name="Messages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Messages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Messages object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="senderPersonId">Initial value of the SenderPersonId property.</param>
        /// <param name="receiverPersonId">Initial value of the ReceiverPersonId property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="isRead">Initial value of the IsRead property.</param>
        public static Messages CreateMessages(global::System.Guid id, global::System.Guid senderPersonId, global::System.Guid receiverPersonId, global::System.String text, global::System.Boolean isRead)
        {
            Messages messages = new Messages();
            messages.Id = id;
            messages.SenderPersonId = senderPersonId;
            messages.ReceiverPersonId = receiverPersonId;
            messages.Text = text;
            messages.IsRead = isRead;
            return messages;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SenderPersonId
        {
            get
            {
                return _SenderPersonId;
            }
            set
            {
                OnSenderPersonIdChanging(value);
                ReportPropertyChanging("SenderPersonId");
                _SenderPersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SenderPersonId");
                OnSenderPersonIdChanged();
            }
        }
        private global::System.Guid _SenderPersonId;
        partial void OnSenderPersonIdChanging(global::System.Guid value);
        partial void OnSenderPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReceiverPersonId
        {
            get
            {
                return _ReceiverPersonId;
            }
            set
            {
                OnReceiverPersonIdChanging(value);
                ReportPropertyChanging("ReceiverPersonId");
                _ReceiverPersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiverPersonId");
                OnReceiverPersonIdChanged();
            }
        }
        private global::System.Guid _ReceiverPersonId;
        partial void OnReceiverPersonIdChanging(global::System.Guid value);
        partial void OnReceiverPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRead
        {
            get
            {
                return _IsRead;
            }
            set
            {
                OnIsReadChanging(value);
                ReportPropertyChanging("IsRead");
                _IsRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRead");
                OnIsReadChanged();
            }
        }
        private global::System.Boolean _IsRead;
        partial void OnIsReadChanging(global::System.Boolean value);
        partial void OnIsReadChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InfoMedTrashDBModel", Name="Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notification object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="sendingDate">Initial value of the SendingDate property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Notification CreateNotification(global::System.Guid id, global::System.Guid personId, global::System.DateTime sendingDate, global::System.String text, global::System.Boolean isActive)
        {
            Notification notification = new Notification();
            notification.Id = id;
            notification.PersonId = personId;
            notification.SendingDate = sendingDate;
            notification.Text = text;
            notification.IsActive = isActive;
            return notification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SendingDate
        {
            get
            {
                return _SendingDate;
            }
            set
            {
                OnSendingDateChanging(value);
                ReportPropertyChanging("SendingDate");
                _SendingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendingDate");
                OnSendingDateChanged();
            }
        }
        private global::System.DateTime _SendingDate;
        partial void OnSendingDateChanging(global::System.DateTime value);
        partial void OnSendingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExecutedDate
        {
            get
            {
                return _ExecutedDate;
            }
            set
            {
                OnExecutedDateChanging(value);
                ReportPropertyChanging("ExecutedDate");
                _ExecutedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExecutedDate");
                OnExecutedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExecutedDate;
        partial void OnExecutedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExecutedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InfoMedTrashDBModel", Name="PersonMeasuring")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonMeasuring : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonMeasuring object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="measuringTypeId">Initial value of the MeasuringTypeId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="measuringDate">Initial value of the MeasuringDate property.</param>
        public static PersonMeasuring CreatePersonMeasuring(global::System.Guid id, global::System.Guid personId, global::System.Guid measuringTypeId, global::System.Double value, global::System.DateTime measuringDate)
        {
            PersonMeasuring personMeasuring = new PersonMeasuring();
            personMeasuring.Id = id;
            personMeasuring.PersonId = personId;
            personMeasuring.MeasuringTypeId = measuringTypeId;
            personMeasuring.Value = value;
            personMeasuring.MeasuringDate = measuringDate;
            return personMeasuring;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MeasuringTypeId
        {
            get
            {
                return _MeasuringTypeId;
            }
            set
            {
                OnMeasuringTypeIdChanging(value);
                ReportPropertyChanging("MeasuringTypeId");
                _MeasuringTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeasuringTypeId");
                OnMeasuringTypeIdChanged();
            }
        }
        private global::System.Guid _MeasuringTypeId;
        partial void OnMeasuringTypeIdChanging(global::System.Guid value);
        partial void OnMeasuringTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Double _Value;
        partial void OnValueChanging(global::System.Double value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MeasuringDate
        {
            get
            {
                return _MeasuringDate;
            }
            set
            {
                OnMeasuringDateChanging(value);
                ReportPropertyChanging("MeasuringDate");
                _MeasuringDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeasuringDate");
                OnMeasuringDateChanged();
            }
        }
        private global::System.DateTime _MeasuringDate;
        partial void OnMeasuringDateChanging(global::System.DateTime value);
        partial void OnMeasuringDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InfoMedTrashDBModel", Name="PersonMedicament")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonMedicament : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonMedicament object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="recordingDate">Initial value of the RecordingDate property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="medicamentId">Initial value of the MedicamentId property.</param>
        public static PersonMedicament CreatePersonMedicament(global::System.Guid id, global::System.DateTime recordingDate, global::System.Guid personId, global::System.Guid medicamentId)
        {
            PersonMedicament personMedicament = new PersonMedicament();
            personMedicament.Id = id;
            personMedicament.RecordingDate = recordingDate;
            personMedicament.PersonId = personId;
            personMedicament.MedicamentId = medicamentId;
            return personMedicament;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordingDate
        {
            get
            {
                return _RecordingDate;
            }
            set
            {
                OnRecordingDateChanging(value);
                ReportPropertyChanging("RecordingDate");
                _RecordingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordingDate");
                OnRecordingDateChanged();
            }
        }
        private global::System.DateTime _RecordingDate;
        partial void OnRecordingDateChanging(global::System.DateTime value);
        partial void OnRecordingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicamentId
        {
            get
            {
                return _MedicamentId;
            }
            set
            {
                OnMedicamentIdChanging(value);
                ReportPropertyChanging("MedicamentId");
                _MedicamentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicamentId");
                OnMedicamentIdChanged();
            }
        }
        private global::System.Guid _MedicamentId;
        partial void OnMedicamentIdChanging(global::System.Guid value);
        partial void OnMedicamentIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InfoMedTrashDBModel", Name="PersonRiskFactor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonRiskFactor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonRiskFactor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="recordingDate">Initial value of the RecordingDate property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="riskFactorId">Initial value of the RiskFactorId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static PersonRiskFactor CreatePersonRiskFactor(global::System.Guid id, global::System.DateTime recordingDate, global::System.Guid personId, global::System.Guid riskFactorId, global::System.Double value)
        {
            PersonRiskFactor personRiskFactor = new PersonRiskFactor();
            personRiskFactor.Id = id;
            personRiskFactor.RecordingDate = recordingDate;
            personRiskFactor.PersonId = personId;
            personRiskFactor.RiskFactorId = riskFactorId;
            personRiskFactor.Value = value;
            return personRiskFactor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordingDate
        {
            get
            {
                return _RecordingDate;
            }
            set
            {
                OnRecordingDateChanging(value);
                ReportPropertyChanging("RecordingDate");
                _RecordingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordingDate");
                OnRecordingDateChanged();
            }
        }
        private global::System.DateTime _RecordingDate;
        partial void OnRecordingDateChanging(global::System.DateTime value);
        partial void OnRecordingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RiskFactorId
        {
            get
            {
                return _RiskFactorId;
            }
            set
            {
                OnRiskFactorIdChanging(value);
                ReportPropertyChanging("RiskFactorId");
                _RiskFactorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskFactorId");
                OnRiskFactorIdChanged();
            }
        }
        private global::System.Guid _RiskFactorId;
        partial void OnRiskFactorIdChanging(global::System.Guid value);
        partial void OnRiskFactorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Double _Value;
        partial void OnValueChanging(global::System.Double value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InfoMedTrashDBModel", Name="PersonSymptom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonSymptom : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonSymptom object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="recordingDate">Initial value of the RecordingDate property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="symptomId">Initial value of the SymptomId property.</param>
        public static PersonSymptom CreatePersonSymptom(global::System.Guid id, global::System.DateTime recordingDate, global::System.Guid personId, global::System.Guid symptomId)
        {
            PersonSymptom personSymptom = new PersonSymptom();
            personSymptom.Id = id;
            personSymptom.RecordingDate = recordingDate;
            personSymptom.PersonId = personId;
            personSymptom.SymptomId = symptomId;
            return personSymptom;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordingDate
        {
            get
            {
                return _RecordingDate;
            }
            set
            {
                OnRecordingDateChanging(value);
                ReportPropertyChanging("RecordingDate");
                _RecordingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordingDate");
                OnRecordingDateChanged();
            }
        }
        private global::System.DateTime _RecordingDate;
        partial void OnRecordingDateChanging(global::System.DateTime value);
        partial void OnRecordingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Guid _PersonId;
        partial void OnPersonIdChanging(global::System.Guid value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SymptomId
        {
            get
            {
                return _SymptomId;
            }
            set
            {
                OnSymptomIdChanging(value);
                ReportPropertyChanging("SymptomId");
                _SymptomId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SymptomId");
                OnSymptomIdChanged();
            }
        }
        private global::System.Guid _SymptomId;
        partial void OnSymptomIdChanging(global::System.Guid value);
        partial void OnSymptomIdChanged();

        #endregion
    
    }

    #endregion
    
}
